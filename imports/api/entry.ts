import { Mongo } from 'meteor/mongo'

export enum EntryType {
	VIDEO = 'entry_video',
	DOCUMENT = 'entry_document'
}

export enum VerificationStatus {
	WAITING = 'status_waiting',
	VERIFIED = 'status_verified',
	REJECTED = 'status_rejected',
	DISPUTED = 'status_disputed'
}

/** Base interface for entries, shouldn't be used on its own but as an inherited interface. */
export interface EntryBase {
	/** Generated by database. */
	_id?: string
	/** The entry type. */
	type: EntryType
	/** Stores whether the entry has been verified by a human operator. */
	verificationStatus: VerificationStatus
	/** How many times an entry has been disputed. */
	disputeCount?: number
}

/** Interface for video entries. */
export interface VideoEntry extends EntryBase {
	type: EntryType.VIDEO
	/** Whether the file passes automated technical requirements checks. */
	formatValidated?: boolean
}

/** Interface for document entries. */
export interface DocumentEntry extends EntryBase {
	type: EntryType.DOCUMENT
	/** Name of the uploaded file. */
	uploadedFile: string
}

export type Entry = VideoEntry | DocumentEntry

export const Entries = new Mongo.Collection<Entry>('entries')
